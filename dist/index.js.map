{"version":3,"sources":["../src/index.js"],"names":["getLogLevelFromEnv","fromEnv","process","env","LOGGER_LEVEL","defaultConfig","name","LOGGER_NAME","level","init","logger","timestamp","mixin","Date","now","nestedKey"],"mappings":";;;;;;;;AAEA;;AAEA;;;;AAYA,SAASA,kBAAT,GAAyC;AACvC,MAAMC,OAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAjC;AAEA,SAAOH,OAAO,IAAI,MAAlB;AACD;;AAED,IAAMI,aAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAEJ,OAAO,CAACC,GAAR,CAAYI,WAAZ,IAA2B,EADD;AAEhC;AACAC,EAAAA,KAAK,EAAER,kBAAkB;AAHO,CAAlC;;AAMO,SAASS,IAAT,OAAmF;AAAA,MAAnEH,IAAmE,QAAnEA,IAAmE;AAAA,MAA7DE,KAA6D,QAA7DA,KAA6D;AACxF,MAAME,MAAkB,GAAG,sBAAK;AAC9BJ,IAAAA,IAAI,EAAEA,IAAI,IAAID,aAAa,CAACC,IADE;AAE9BE,IAAAA,KAAK,EAAEA,KAAK,IAAIH,aAAa,CAACG,KAFA;AAG9BG,IAAAA,SAAS,EAAE,KAHmB;AAI9BC,IAAAA,KAAK,EAAE;AAAA,aAAO;AAAED,QAAAA,SAAS,EAAEE,IAAI,CAACC,GAAL;AAAb,OAAP;AAAA,KAJuB;AAK9BC,IAAAA,SAAS,EAAE;AALmB,GAAL,CAA3B;AAQA,SAAOL,MAAP;AACD;;AAED,IAAMA,MAAkB,GAAGD,IAAI,CAACJ,aAAD,CAA/B;eAEeK,M","sourcesContent":["// @flow\n\nimport pino from 'pino';\n\nimport { levels } from './levels';\n\ntype LevelType = $Keys<typeof levels>;\ntype LoggerType = {\n  [LevelType]: (arg0: string) => void | (arg0: { }, arg1: string) => void, \n}\n\ntype ConfigType = {\n  name: string,\n  level: LevelType,\n}\n\nfunction getLogLevelFromEnv(): LevelType {\n  const fromEnv: any = process.env.LOGGER_LEVEL;\n\n  return fromEnv || 'info';\n}\n\nconst defaultConfig: ConfigType = {\n  name: process.env.LOGGER_NAME || '',\n  // eslint-disable-next-line import/no-named-as-default-member\n  level: getLogLevelFromEnv(),\n};\n\nexport function init({ name, level }: { +name?: string, +level?: LevelType }): LoggerType {\n  const logger: LoggerType = pino({\n    name: name || defaultConfig.name,\n    level: level || defaultConfig.level,\n    timestamp: false,\n    mixin: () => ({ timestamp: Date.now() }),\n    nestedKey: 'details',\n  });\n\n  return logger;\n}\n\nconst logger: LoggerType = init(defaultConfig);\n\nexport default logger;\n"],"file":"index.js"}